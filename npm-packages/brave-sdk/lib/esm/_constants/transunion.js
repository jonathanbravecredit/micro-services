/*===================================*/
/*              enums                */
/*===================================*/
export var CreditBureauFindingsType;
(function (CreditBureauFindingsType) {
    CreditBureauFindingsType["Trade"] = "tradeline";
    CreditBureauFindingsType["PublicRecord"] = "publicrecord";
    CreditBureauFindingsType["PersonalInfo"] = "personalinfo";
})(CreditBureauFindingsType || (CreditBureauFindingsType = {}));
export var TUStatusRefStatuses;
(function (TUStatusRefStatuses) {
    TUStatusRefStatuses["Success"] = "success";
    TUStatusRefStatuses["Failed"] = "failed";
    TUStatusRefStatuses["Bypassed"] = "bypassed";
})(TUStatusRefStatuses || (TUStatusRefStatuses = {}));
export var TUBundles;
(function (TUBundles) {
    TUBundles["IndicativeEnrichment"] = "IndicativeEnrichment";
    TUBundles["GetAuthenticationQuestions"] = "GetAuthenticationQuestions";
    TUBundles["VerifyAuthenticationQuestionsOTP"] = "VerifyAuthenticationQuestionsOTP";
    TUBundles["VerifyAuthenticationQuestionsKBA"] = "VerifyAuthenticationQuestionsKBA";
})(TUBundles || (TUBundles = {}));
export var CreditReportGroups;
(function (CreditReportGroups) {
    CreditReportGroups["CreditCards"] = "creditCards";
    CreditReportGroups["CollectionsAccounts"] = "collectionsAccounts";
    CreditReportGroups["InstallmentLoans"] = "installmentLoans";
    CreditReportGroups["Mortgages"] = "mortgages";
})(CreditReportGroups || (CreditReportGroups = {}));
export var OTPQuestion;
(function (OTPQuestion) {
    OTPQuestion["FullText"] = "Please select your preferred method of Authentication?(Standard text message and voice rates apply)*</FullQuestionText";
    OTPQuestion["PartialOne"] = "preferred method of Authentication";
    OTPQuestion["PartialTwo"] = "Standard text message and voice rates apply";
})(OTPQuestion || (OTPQuestion = {}));
export var OTPReponse;
(function (OTPReponse) {
    OTPReponse["FullText"] = "Deliver passcode via Text Message";
    OTPReponse["PartialOne"] = "via Text Message";
})(OTPReponse || (OTPReponse = {}));
export var PassCodeQuestion;
(function (PassCodeQuestion) {
    PassCodeQuestion["FullText"] = "Enter the passcode you received";
    PassCodeQuestion["PartialOne"] = "passcode";
})(PassCodeQuestion || (PassCodeQuestion = {}));
export var ReportPartitions;
(function (ReportPartitions) {
    ReportPartitions["TradelineItem"] = "tradelineitem";
    ReportPartitions["PersonalItem"] = "personalitem";
    ReportPartitions["PublicItem"] = "publicitem";
})(ReportPartitions || (ReportPartitions = {}));
export var DataBreaches;
(function (DataBreaches) {
    DataBreaches["None"] = "none";
    DataBreaches["Condition1"] = "california-dmv";
    DataBreaches["Condition2"] = "university-california";
    DataBreaches["Condition3"] = "university-colorado";
    DataBreaches["Condition4"] = "kroger-customer";
    DataBreaches["Condition5"] = "tmobile-customer";
    DataBreaches["Condition6"] = "state-washington";
    DataBreaches["Condition7"] = "experian";
})(DataBreaches || (DataBreaches = {}));
/*===================================*/
/*              tu maps              */
/*===================================*/
export const PHONE_MAP = {
    AreaCode: true,
    Number: true,
    Extension: true,
};
export const NAME_MAP = {
    prefix: true,
    first: true,
    middle: true,
    last: true,
    suffix: true,
};
export const ADDRESS_LINE_1 = {
    houseNumber: true,
    streetNumber: true,
    streetName: true,
    streetType: true,
    direction: true,
    unit: true,
};
export const ADDRESS_LINE_2 = {
    city: true,
    stateCode: true,
    postalCode: true,
};
export const CREDIT_REPORT_GROUPS = {
    c: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },
    r: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },
    o: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },
    u: { order: 1, group: CreditReportGroups.CreditCards, title: 'Credit Cards' },
    y: {
        order: 2,
        group: CreditReportGroups.CollectionsAccounts,
        title: 'Collections Accounts',
    },
    i: {
        order: 3,
        group: CreditReportGroups.InstallmentLoans,
        title: 'Student, Car & Personal Loans',
    },
    m: { order: 4, group: CreditReportGroups.Mortgages, title: 'Mortgages' },
};
export const ONTIME_PAY_STATUS_CODES = {
    C: `Current`,
};
export const UNKNOWN_PAY_STATUS_CODES = {
    U: `No Data / Unknown`,
};
export const TOO_NEW_STATUS_CODE = {
    '0': 'Too New to Rate',
};
export const LATE_30_STATUS_CODE = {
    '1': 'Late 30 Days',
};
export const LATE_60_STATUS_CODE = {
    '2': 'Late 60 Days',
};
export const LATE_90_STATUS_CODE = {
    '3': 'Late 90 Days',
};
export const LATE_120_STATUS_CODE = {
    '4': 'Late 120 Days',
};
export const COLLECTION_PAY_STATUS_CODES = {
    '9': `Collection Chargeoff Account`,
};
export const WAGE_EARNER_PAY_STATUS_CODES = {
    '7': `Wage Earner Plan`,
};
export const REPOSSESSION_PAY_STATUS_CODE = {
    '8R': `Repossession Account`,
};
export const LATE_PAY_STATUS_CODES = Object.assign(Object.assign(Object.assign(Object.assign({}, LATE_30_STATUS_CODE), LATE_60_STATUS_CODE), LATE_90_STATUS_CODE), LATE_120_STATUS_CODE);
export const POSITIVE_PAY_STATUS_CODES = Object.assign(Object.assign(Object.assign(Object.assign({}, TOO_NEW_STATUS_CODE), TOO_NEW_STATUS_CODE), ONTIME_PAY_STATUS_CODES), WAGE_EARNER_PAY_STATUS_CODES);
export const NEGATIVE_PAY_STATUS_CODES = Object.assign(Object.assign(Object.assign({}, LATE_PAY_STATUS_CODES), COLLECTION_PAY_STATUS_CODES), REPOSSESSION_PAY_STATUS_CODE);
export const PAY_STATUS_CODES = Object.assign(Object.assign({}, POSITIVE_PAY_STATUS_CODES), NEGATIVE_PAY_STATUS_CODES);
export const PAY_STATUS_WARNINGS = {
    '1': `brave-danger`,
    '2': `brave-danger`,
    '3': `brave-critical`,
    '4': `brave-critical`,
    '8R': `brave-critical`,
    '9': `brave-critical`,
    U: `brave-unknown`,
    C: `brave-safe`,
    '0': `brave-safe`,
    '7': `brave-safe`,
};
export const BRAVE_ACCOUNT_TYPE = {
    '0': `Too New to Rate`,
    '1': `30-Day Late Payment`,
    '2': `60-Day Late Payment`,
    '3': `90-Day Late Payment`,
    '4': `120-Day Late Payment`,
    '7': `Wage Earner Plan`,
    '8R': `Repossesion Account`,
    '9': `Collection Chargeoff Account`,
    U: `No Data / Unknown`,
    C: `Current`,
};
export const DATA_BREACH_CARDS = {
    [DataBreaches.Condition1]: {
        reviewed: false,
        subscriber: 'California DMV',
        condition: DataBreaches.Condition1,
        reason: 'Based on your personal information',
        paragraphs: [
            `<p class="mb-5">In February 2021, at least 38 million records from the California DMV were compromised through a billing contractor, Automatic Funds Transfer Services. Information leaked includes 20 months’ worth of CA vehicle registration records such as names, addresses, license place numbers, and vehicle identification numbers (VINS) from at least August 2019.</p>`,
        ],
    },
    [DataBreaches.Condition2]: {
        reviewed: false,
        subscriber: 'University of California',
        condition: DataBreaches.Condition2,
        reason: 'Based on your state of residence',
        paragraphs: [
            `<p class="mb-5">In April 2021, the University of California System had a data leak through its work with the third party company Accelion that affected current and former UC System employees, students, dependents, and applicants. The leaks may include full names, addresses, social security numbers, driver’s license info, and financial information, including bank routing and account numbers, among other data.</p>`,
            `<p class="mb-5">If you haven’t attended a University of California school, this is showing up here since 1/3 of all students in CA attend one of these schools. If you are the parent of a current or former student, you could also be affected</p>`,
        ],
    },
    [DataBreaches.Condition3]: {
        reviewed: false,
        subscriber: 'University of Colorado',
        condition: DataBreaches.Condition3,
        reason: 'Based on your state of residence',
        paragraphs: [
            `<p class="mb-5">In April 2021, the University of Colorado system disclosed a data leak through its work with the third party company Accelion. It affected current and former employees, students, and others, primarily in the Boulder and Denver campuses. The leaks may include personally identifiable information, including addresses, social security numbers, driver’s license info, and demographic data.</p>`,
            `<p class="mb-5">If you haven’t attended a University of Colorado school, this is showing up in case you are the parent of a current or former student, or otherwise in the University of Colorado system (such as a donor or employee, etc.)</p>`,
        ],
    },
    [DataBreaches.Condition4]: {
        reviewed: false,
        subscriber: 'Kroger',
        condition: DataBreaches.Condition4,
        reason: 'Based on your state of residence',
        paragraphs: [
            `<p class="mb-5">On January 2021, Kroger and its family of companies disclosed a data leak through its work with the third party company Accelion. It affected both customers and employees. Impacted data includes some employee HR data, pharmacy records, and some money service records. No credit or debit card information was affected.</p>`,
        ],
    },
    [DataBreaches.Condition5]: {
        reviewed: false,
        subscriber: 'T-Mobile',
        condition: DataBreaches.Condition5,
        reason: 'Based on your inquiries',
        paragraphs: [
            `<p class="mb-5">On August 2017, T-Mobile confirmed that the data of 100 million people was stolen, including customers and non-customers who applied for phones. Leaked information includes physical addresses, Social Security information, driver’s license information, and other data.</p>`,
        ],
    },
    [DataBreaches.Condition6]: {
        reviewed: false,
        subscriber: 'State of Washington',
        condition: DataBreaches.Condition6,
        reason: 'Based on your state of residence',
        paragraphs: [
            `<p class="mb-5">In late December 2020 / January 2021, the state of Washington suffered a data leak through its work with the third party company Accelion which affected around 1.5mm residents, including people who had unemployment benefits through the Employment Security Department from 2017 – 2020. Leaked data includes names, Social Security numbers, birth dates, addresses, and bank account numbers</p>`,
        ],
    },
    [DataBreaches.Condition7]: {
        reviewed: false,
        subscriber: 'Experian',
        condition: DataBreaches.Condition7,
        reason: 'Based on your personal information',
        paragraphs: [
            `<p class="mb-5">On April 2021, a security researcher found that Experian consumer credit scores could be obtained without user consent on lending sites by tinkering with the code. Using publicly-available consumer information, they could force the site to reveal a customer’s credit score. Experian fixed the issue days after it was revealed, but the impact of the flaw is unknown.</p>`,
        ],
    },
};
//I want to pass in a name of a rule and check some conditions based on the associated rules
// then I want to return if it passes or not.
// I may want to pass back some data as well.
const condition1 = (summary) => {
    const { totalLineAmount, amountOfClosed } = summary;
    return !amountOfClosed && !totalLineAmount;
};
const condition2 = (summary) => {
    const { totalLineAmount } = summary;
    return totalLineAmount === 1;
};
const condition3 = (summary) => {
    const { totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount - amountOfClosed <= 4 && totalLineAmount - amountOfClosed >= 2;
};
const condition4 = (summary) => {
    const { amountOfOpenCreditCards, autoLoanAmount, studentLoanAmount, mortgageAmount } = summary;
    return amountOfOpenCreditCards >= 5 && !autoLoanAmount && !studentLoanAmount && !mortgageAmount;
};
const condition5 = (summary) => {
    const { totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount === amountOfClosed && amountOfClosed > 2;
};
const condition6 = (summary) => {
    const { autoLoanAmount, studentLoanAmount, mortgageAmount, totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount - amountOfClosed <= 7 && (!!studentLoanAmount || !!autoLoanAmount) && !mortgageAmount;
};
const condition7 = (summary) => {
    const { autoLoanAmount, studentLoanAmount, mortgageAmount, totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount - amountOfClosed <= 7 && (!!studentLoanAmount || !!autoLoanAmount || !!mortgageAmount);
};
const condition8 = (summary) => {
    const { creditCardAmount, autoLoanAmount, mortgageAmount, totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount - amountOfClosed >= 8 && !!creditCardAmount && !!autoLoanAmount && !!mortgageAmount;
};
const condition9 = (summary) => {
    const { totalLineAmount, amountOfClosed } = summary;
    return totalLineAmount - amountOfClosed >= 8;
};
export var Recommendations;
(function (Recommendations) {
    Recommendations["Link"] = "https://learn.self.inc/lpg/click-through/credit-builder-education-credit-card/?affiliate_partner=Bulldog%20Media%20Group&irgwc=1&irclickid=yB12CQ130xyIRHnyqjWYSydRUkG2Ph1p1VLCXg0&utm_source=impact_radius&utm_medium=affiliate&utm_campaign=Bulldog%20Media%20Group&utm_content=Self%20-%20Credit%20Card%20%2B%20Credit%20Builder%20Combo%20Page&media_partner1=&media_partner2=&media_parter3=&ad_name=Self%20-%20Credit%20Card%20%2B%20Credit%20Builder%20Combo%20Page&ad_type=TEXT_LINK&media_partner_id=70161&campaign_id=10159&media_partner_type=mediapartner&click_time_unix=1638237272355&subid1=N4P567_19805&subid2=&subid3=&sharedid=N4P567_19805&ircid=10159";
    Recommendations["TwoToFourLink"] = "https://www.commissionsoup.com/opts.aspx?t=POIUA7&u=https%3A%2F%2Fwww.milestonegoldcard.com%2Fpre-qualify%3Fmmcid%3DMAAG00213075001%26subid%3DPOIUA7_5851_19805";
    Recommendations["AllClosedLink"] = "https://www.commissionsoup.com/opts.aspx?t=POIUA7&u=https%3A%2F%2Fwww.milestonegoldcard.com%2Fpre-qualify%3Fmmcid%3DMAAG00213075001%26subid%3DPOIUA7_5851_19805";
    Recommendations["NotTooLate"] = "It's never too late to start building a diversified credit base to help your score!";
    Recommendations["GoodStart"] = "You're off to a good start on building a strong credit base!";
    Recommendations["GreatStart"] = "You're off to a great start on building a strong credit base!";
    Recommendations["GreatBut"] = "You have a great credit base but there's a few easy things that can make it even better!";
    Recommendations["GoodBut"] = "You have a good credit base, but keeping some accounts open could help you in the future!";
    Recommendations["Fantastic"] = "You're doing a fantastic job managing a variety of credit types!";
    Recommendations["GreatJob"] = "Great job managing a variety of credit types!";
    Recommendations["ExceptionalJob"] = "You're doing an exceptional job managing your credit mix!";
    Recommendations["SeeProducts"] = "Click here to learn about a product that helps you build your credit without taking on debt!";
    Recommendations["MakeStronger"] = "Make your credit stronger by opening up other credit products. Want to do this without taking on debt? Click here to learn how to do this!";
    Recommendations["WiderCreditBase"] = "Make your credit stronger with a wider credit base. Click here to learn about an entry-level credit card that could help your credit grow!";
    Recommendations["HavingMore"] = "Having more than credit cards could help you show lenders you can manage a variety of credit types. Click to learn about an easy way to do this while saving for a house or car!";
    Recommendations["ForExample"] = "Keeping an old credit card open could really help your score! Click to learn about an unsecured credit card that could help.";
    Recommendations["MakeSure"] = "Make sure to keep making on-time payments and keeping your utilization low on any credit cards!";
    Recommendations["HouseGoal"] = "If your goal is to buy a house, click here for a way to continue to building a stronger credit base and score while helping you save for a down payment!";
    Recommendations["ToHelp"] = "To help your score, remember that keeping credit cards you don't use open, even if you don't use it, increases your credit age and mix!";
    Recommendations["MoreVaried"] = "Having more varied types of credit could help you show lenders you can manage a variety of credit types. Click to learn about an easy way to do this while saving for your goals!";
    Recommendations["ratingPoor"] = "Poor";
    Recommendations["poorColor"] = "#F56700";
    Recommendations["ratingFair"] = "Fair";
    Recommendations["fairColor"] = "#F59300";
    Recommendations["ratingGood"] = "Good";
    Recommendations["goodColor"] = "#BBD904";
    Recommendations["ratingExcellent"] = "Excellent";
    Recommendations["excellentColor"] = "#4BD269";
})(Recommendations || (Recommendations = {}));
export var CreditMixRecommendations;
(function (CreditMixRecommendations) {
    CreditMixRecommendations["NoClosedAndNoOpen"] = "no-closed-and-no-open";
    CreditMixRecommendations["OnlyOneOpen"] = "only-one-open";
    CreditMixRecommendations["TwoToFourOpen"] = "two-to-four-open";
    CreditMixRecommendations["FivePlusOnlyCC"] = "five-plus-only-cc";
    CreditMixRecommendations["AllClosed"] = "all-closed";
    CreditMixRecommendations["SevenOrLessNoMortgage"] = "seven-or-less-no-mortgage";
    CreditMixRecommendations["SevenOrLess"] = "seven-or-less";
    CreditMixRecommendations["EightOrMoreAtLeastOneOfAll"] = "eight-or-more-at-least-one-of-all";
    CreditMixRecommendations["EightOrMore"] = "eight-or-more";
})(CreditMixRecommendations || (CreditMixRecommendations = {}));
export const RecommendationConditionalLogic = {
    [CreditMixRecommendations.NoClosedAndNoOpen]: condition1,
    [CreditMixRecommendations.OnlyOneOpen]: condition2,
    [CreditMixRecommendations.TwoToFourOpen]: condition3,
    [CreditMixRecommendations.FivePlusOnlyCC]: condition4,
    [CreditMixRecommendations.AllClosed]: condition5,
    [CreditMixRecommendations.SevenOrLessNoMortgage]: condition6,
    [CreditMixRecommendations.SevenOrLess]: condition7,
    [CreditMixRecommendations.EightOrMoreAtLeastOneOfAll]: condition8,
    [CreditMixRecommendations.EightOrMore]: condition9,
};
export const RecommendationValues = {
    [CreditMixRecommendations.NoClosedAndNoOpen]: {
        link: Recommendations.Link,
        text: Recommendations.NotTooLate,
        subtext: Recommendations.SeeProducts,
        rating: Recommendations.ratingPoor,
        color: Recommendations.poorColor,
    },
    [CreditMixRecommendations.OnlyOneOpen]: {
        link: Recommendations.Link,
        text: Recommendations.GoodStart,
        subtext: Recommendations.MakeStronger,
        rating: Recommendations.ratingPoor,
        color: Recommendations.poorColor,
    },
    [CreditMixRecommendations.TwoToFourOpen]: {
        link: Recommendations.TwoToFourLink,
        text: Recommendations.GreatStart,
        subtext: Recommendations.WiderCreditBase,
        rating: Recommendations.ratingFair,
        color: Recommendations.fairColor,
    },
    [CreditMixRecommendations.FivePlusOnlyCC]: {
        link: Recommendations.Link,
        text: Recommendations.GreatBut,
        subtext: Recommendations.HavingMore,
        rating: Recommendations.ratingFair,
        color: Recommendations.fairColor,
    },
    [CreditMixRecommendations.AllClosed]: {
        link: Recommendations.AllClosedLink,
        text: Recommendations.GoodBut,
        subtext: Recommendations.ForExample,
        rating: Recommendations.ratingFair,
        color: Recommendations.fairColor,
    },
    [CreditMixRecommendations.SevenOrLessNoMortgage]: {
        link: Recommendations.Link,
        text: Recommendations.GreatJob,
        subtext: Recommendations.HouseGoal,
        rating: Recommendations.ratingGood,
        color: Recommendations.goodColor,
    },
    [CreditMixRecommendations.SevenOrLess]: {
        link: Recommendations.Link,
        text: Recommendations.Fantastic,
        subtext: Recommendations.MakeSure,
        rating: Recommendations.ratingGood,
        color: Recommendations.goodColor,
    },
    [CreditMixRecommendations.EightOrMoreAtLeastOneOfAll]: {
        link: Recommendations.Link,
        text: Recommendations.ExceptionalJob,
        subtext: Recommendations.ToHelp,
        rating: Recommendations.ratingExcellent,
        color: Recommendations.excellentColor,
    },
    [CreditMixRecommendations.EightOrMore]: {
        link: Recommendations.Link,
        text: Recommendations.ExceptionalJob,
        subtext: Recommendations.MoreVaried,
        rating: Recommendations.ratingExcellent,
        color: Recommendations.excellentColor,
    },
};
export const FORBEARANCE_TYPE = {
    i: true,
    m: true,
};
export const INDUSTRY_CODES = {
    bs: 'student_loan',
    el: 'student_loan',
    vg: 'student_loan',
};
export const KROGER_STATES = {
    AL: true,
    AR: true,
    AZ: true,
    CA: true,
    CO: true,
    GA: true,
    NC: true,
    IA: true,
    ID: true,
    IL: true,
    IN: true,
    KS: true,
    KY: true,
    LA: true,
    MD: true,
    MI: true,
    MO: true,
    MT: true,
    NE: true,
    NM: true,
    NV: true,
    OH: true,
    OR: true,
    PA: true,
    SC: true,
    TN: true,
    TX: true,
    UT: true,
    VA: true,
    WA: true,
    WI: true,
    WV: true,
    WY: true,
};
export const EXPERIAN_STATES = {
    ND: true,
    SD: true,
    WI: true,
    OK: true,
    ME: true,
    VT: true,
    NH: true,
    NY: true,
    MA: true,
    NJ: true,
    DE: true,
    CT: true,
    RI: true,
    HI: true,
    AK: true,
    NC: true,
    FL: true,
};
export const INVESTIGATION_RESULTS_CODE_MAPPING = [
    {
        type: 'deleted',
        title: 'DELETED',
    },
    {
        type: 'dispute_info_updated',
        title: 'DISPUTED INFORMATION UPDATED',
    },
    {
        type: 'info_updated',
        title: 'INFORMATION UPDATED',
    },
    {
        type: 'dispute_info_other_updated',
        title: 'DISPUTED INFORMATION UPDATED AND OTHER INFORMATION UPDATED',
    },
    {
        type: 'reinserted',
        title: 'REINSERTED',
    },
    {
        type: 'verified_updated',
        title: 'VERIFIED AND UPDATED',
    },
    {
        type: 'verified_accurate',
        title: 'VERIFIED AS ACCURATE',
    },
    {
        type: 'verified_accurate_updated',
        title: 'VERIFIED AS ACCURATE AND UPDATED',
    },
];
export const TRANSUNION_CRITICAL_ERRORS = {
    15: {
        keyWords: ['duplicate'],
    },
    103011: {
        keyWords: ['ssncachematchtodatabasefailed'],
    },
    103014: {
        keyWords: ['dateofbirthmatchtodatabasefailed'],
    },
};
export const TRANSUNION_ERROR_CODES = {
    '11': {
        code: `11`,
        name: `Failure`,
        message: `This failure is used when a specific failure is not available. Retrying the operation will produce the same results`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '12': {
        code: `12`,
        name: `VersionNotCompatible`,
        message: `The version of the request does not match the version of the service. This is a configuration error`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '13': {
        code: `13`,
        name: `AccountNameNotFound`,
        message: `The account specified in the request is not registered at TransUnion Interactive for this service. Please use the proper account name,or talk with your TransUnion Interactive contact`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '14': {
        code: `14`,
        name: `NoHit`,
        message: `The credit bureau has no record of the consumer,or the consumers credit file has been suppressed`,
        category: `General`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '15': {
        code: `15`,
        name: `ThinFile`,
        message: `There is not enough data in the consumers credit history to generate accurate information like scores or identity verification questions`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `unavailable`,
    },
    '16': {
        code: `16`,
        name: `Deceased`,
        message: `The credit bureau indicates that the consumer is deceased`,
        category: `General`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '17': {
        code: `17`,
        name: `UnderAge`,
        message: `The Customer is under age`,
        category: `General`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '18': {
        code: `18`,
        name: `BureauDown`,
        message: `The Credit Bureau is down and not responding`,
        category: `General`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '19': {
        code: `19`,
        name: `UnknownBureauDataFormat`,
        message: `The request included an unknown Bureau Data format`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '20': {
        code: `20`,
        name: `FailureUnknown`,
        message: `The Data Service had an unrecognized Failure Enumeration`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '21': {
        code: `21`,
        name: `DateRangeInvalid`,
        message: `The Date Range used to retreive alerts is not valid`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '22': {
        code: `22`,
        name: `InvalidDateRange`,
        message: `The Date Range used to retreive alerts is not valid`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '23': {
        code: `23`,
        name: `ClientUserNotFound`,
        message: `ClientKey not found in system`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '24': {
        code: `24`,
        name: `SegmentDataMissing`,
        message: `The requested data is not available in the credit report being referenced`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '25': {
        code: `25`,
        name: `InvalidCreditReport`,
        message: `The Credit Report is in an invalid format`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '26': {
        code: `26`,
        name: `SafetyCheckFailed`,
        message: `The input SSN does not match the SSN on the credit data artifact`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '27': {
        code: `27`,
        name: `NoActivity`,
        message: `The requested data cannot be generated because there is no activity on the credit report`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '28': {
        code: `28`,
        name: `ServiceNotAvailable`,
        message: `The requested Service is not available`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '29': {
        code: `29`,
        name: `Suppressed`,
        message: `The requested users credit file is suppressed`,
        category: `General Transactional`,
        method: `Multiple`,
        action: `error`,
    },
    '31': {
        code: `31`,
        name: `InternalError`,
        message: `Bug in TUI code`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '32': {
        code: `32`,
        name: `ValidationError`,
        message: `Input data does not meet XSD validation`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '33': {
        code: `33`,
        name: `ServiceLocatorError`,
        message: `Configuration error at TUI`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '34': {
        code: `34`,
        name: `VendorUnavailable`,
        message: `TUI is unable to locate the bureau service end point`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '35': {
        code: `35`,
        name: `VendorTimedOut`,
        message: `The bureau did not respond in a TUI configured time period`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '36': {
        code: `36`,
        name: `InvalidVendorRequest`,
        message: `The bureau does not understand the TUI formatted request`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '37': {
        code: `37`,
        name: `InvalidVendorResponse`,
        message: `The bureaus response to TUI does not meet the bureau's specification`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '38': {
        code: `38`,
        name: `ServiceErrorUnknown`,
        message: `unrecognized ErrorStatus`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '39': {
        code: `39`,
        name: `INTERNAL_ERROR`,
        message: `INTERNAL_ERROR`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '51': {
        code: `51`,
        name: `ExceptionTimeout`,
        message: `A timeout occurred within the orchestration connection to CCS and TUI did not get a response back`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '52': {
        code: `52`,
        name: `ExceptionMissingData`,
        message: `An orchestration service call was initiated but was never able to make a request/response to CCS due to required data missing`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '53': {
        code: `53`,
        name: `ExceptionUnknown`,
        message: `A general error was encountered within the orchestration service and there was no subsequent response from CCS`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '54': {
        code: `54`,
        name: `UnableToConvert`,
        message: `This will be used in the case where the code cannot translate a data service return value to the DataServiceOutcomes enum`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '173': {
        code: `173`,
        name: `MaxOptionalProductsCount`,
        message: `Exceeded the count of maximum optional products`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '174': {
        code: `174`,
        name: `InvalidStartOrEndDate`,
        message: `Start and End are required inputs for this method`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '175': {
        code: `175`,
        name: `BUREAU_FAILURE`,
        message: `BUREAU_FAILURE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '176': {
        code: `176`,
        name: `CLIENT_KEY_NOT_ENROLLED`,
        message: `CLIENT_KEY_NOT_ENROLLED`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '177': {
        code: `177`,
        name: `VALIDATION_FAILURE`,
        message: `VALIDATION_FAILURE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '178': {
        code: `178`,
        name: `FREEZE_PRESENT`,
        message: `FREEZE_PRESENT`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '179': {
        code: `179`,
        name: `AlreadyConfirmed`,
        message: `AlreadyConfirmed`,
        category: `General`,
        method: `Multiple`,
        action: `bypass`,
    },
    '180': {
        code: `180`,
        name: `PasscodeNotSent`,
        message: `Passcode Not Sent`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '181': {
        code: `181`,
        name: `BusinessNotFound`,
        message: `BusinessNotFound`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '182': {
        code: `182`,
        name: `NoDetailsAvailable`,
        message: `NoDetailsAvailable`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '183': {
        code: `183`,
        name: `Ineligible`,
        message: `Ineligible`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '184': {
        code: `184`,
        name: `NoConsent`,
        message: `NoConsent`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '185': {
        code: `185`,
        name: `InvalidSocialSecurityNumber`,
        message: `InvalidSocialSecurityNumber`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '186': {
        code: `186`,
        name: `NoPhoneNumber`,
        message: `NoPhoneNumber`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '187': {
        code: `187`,
        name: `MaxRetryHit`,
        message: `MaxRetryHit`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '188': {
        code: `188`,
        name: `FailedAttempt`,
        message: `FailedAttempt`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '189': {
        code: `189`,
        name: `Abandoned`,
        message: `Abandoned`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '190': {
        code: `190`,
        name: `InvalidParameter`,
        message: `InvalidParameter`,
        category: `Identity Protection`,
        method: `Multiple`,
        action: `error`,
    },
    '191': {
        code: `191`,
        name: `Internalservererror`,
        message: `A server error occurred during request processing. Resubmit your request later.`,
        category: `Identity Protection`,
        method: `Multiple`,
        action: `error`,
    },
    '192': {
        code: `192`,
        name: `OnlyTransUnionReports`,
        message: `304 - only transunion report allowed for the service`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '196': {
        code: `196`,
        name: `NAME_PARSING_ERROR`,
        message: `NAME_PARSING_ERROR`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '197': {
        code: `197`,
        name: `UNKNOWN_ERROR_CODE`,
        message: `UNKNOWN_ERROR_CODE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '198': {
        code: `198`,
        name: `SUBSCRIPTION_FAILURE`,
        message: `SUBSCRIPTION_FAILURE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '201': {
        code: `201`,
        name: `ScoreOutOfRange`,
        message: `The score generated is not within the expected range`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '202': {
        code: `202`,
        name: `SSNNotFound`,
        message: `The input SSN is not found within the service`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '203': {
        code: `203`,
        name: `ADDRESS_MISMATCH`,
        message: `ADDRESS_MISMATCH`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '204': {
        code: `204`,
        name: `ALERT_FILE_FROZEN`,
        message: `ALERT_FILE_FROZEN`,
        category: `Monitoring`,
        method: `Enroll`,
        action: `error`,
    },
    '205': {
        code: `205`,
        name: `ALREADY_WATCHED`,
        message: `ALREADY_WATCHED`,
        category: `Monitoring`,
        method: `Enroll`,
        action: `bypass`,
    },
    '206': {
        code: `206`,
        name: `AWAITING_RETRY`,
        message: `AWAITING_RETRY`,
        category: `Monitoring`,
        method: `Multiple`,
        action: `error`,
    },
    '207': {
        code: `207`,
        name: `BUREAU_TIMEOUT`,
        message: `The bureau did not respond in a TUI configured time period`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '208': {
        code: `208`,
        name: `BUREAU_UNAVAILABLE`,
        message: `The Credit Bureau is down and not responding`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '209': {
        code: `209`,
        name: `FILE_SUPPRESSED`,
        message: `The requested users credit file is suppressed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '210': {
        code: `210`,
        name: `FRAUD_WARNING`,
        message: `FRAUD_WARNING`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '211': {
        code: `211`,
        name: `INSUFFICIENT_REQUEST_INFO`,
        message: `INSUFFICIENT_REQUEST_INFO`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '212': {
        code: `212`,
        name: `INVALID_BUREAU_CODE`,
        message: `INVALID_BUREAU_CODE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '213': {
        code: `213`,
        name: `INVALID_BUREAU_REQUEST`,
        message: `INVALID_BUREAU_REQUEST`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '214': {
        code: `214`,
        name: `INVALID_BUREAU_RESPONSE`,
        message: `INVALID_BUREAU_RESPONSE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '215': {
        code: `215`,
        name: `INVALID_VENDOR_CONFIG`,
        message: `INVALID_VENDOR_CONFIG`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '216': {
        code: `216`,
        name: `POSSIBLE_MINOR`,
        message: `The credit data artifact indicates that requested data may be of a minor (underage)`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '217': {
        code: `217`,
        name: `SYSTEM_ERROR`,
        message: `system error`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '218': {
        code: `218`,
        name: `UNKNOWN_ERROR`,
        message: `unknown error`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '219': {
        code: `219`,
        name: `USER_NOT_CURRENTLY_WATCHED`,
        message: `user not currently watched`,
        category: `Monitoring`,
        method: `IsEnrolled`,
        action: `error`,
    },
    '220': {
        code: `220`,
        name: `WATCH_DOES_NOT_EXIST`,
        message: `watch does not exist`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '101113': {
        code: `101113`,
        name: `CC2AddTrendingDataFailure`,
        message: `Failure/Non-Success Response from CC2 Add Trending Data Method`,
        category: `Product Trending`,
        method: `AddTrendingData`,
        action: `retry`,
    },
    '101132': {
        code: `101132`,
        name: `CC2AddFraudAlertFailure`,
        message: `Failure/Non-Success Response from CC2 AddFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `AddFraudAlert`,
        action: `retry`,
    },
    '101104': {
        code: `101104`,
        name: `CC2CancelEnrollmentFailure`,
        message: `Failure/Non-Success Response from CC2 Cancel Enrollment Method`,
        category: `General Subscription`,
        method: `CancelEnrollment`,
        action: `retry`,
    },
    '225': {
        code: `225`,
        name: `NoQuestionsRemaining`,
        message: `No Questions Remaining`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '226': {
        code: `226`,
        name: `SSNCacheMatchFailed`,
        message: `SSN Cache Match Failed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '227': {
        code: `227`,
        name: `No_Hit`,
        message: `The credit bureau has no record of the consumer,or the consumers credit file has been suppressed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102042': {
        code: `102042`,
        name: `CC2GetDisputeStatusInvalidDisputeId`,
        message: `Invalid disputeID`,
        category: `Disputes`,
        method: `GetDisputeStatus`,
        action: `error`,
    },
    '229': {
        code: `229`,
        name: `InvalidBureauResponseXML`,
        message: `The response XML from the bureau was invalid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '230': {
        code: `230`,
        name: `VALIDATION_ERROR`,
        message: `VALIDATION_ERROR`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '231': {
        code: `231`,
        name: `INVALID_ACCOUNT`,
        message: `INVALID_ACCOUNT`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '232': {
        code: `232`,
        name: `UNAUTHORIZED_ACCOUNT`,
        message: `UNAUTHORIZED_ACCOUNT`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '233': {
        code: `233`,
        name: `ACCOUNT_EXPIRED`,
        message: `ACCOUNT_EXPIRED`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '234': {
        code: `234`,
        name: `VERSION_NOT_COMPATIBLE`,
        message: `VERSION_NOT_COMPATIBLE`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '235': {
        code: `235`,
        name: `FAILURE_EXTENDED`,
        message: `FAILURE_EXTENDED`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '236': {
        code: `236`,
        name: `INVALID_ACCOUNT_CODE`,
        message: `INVALID_ACCOUNT_CODE`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '237': {
        code: `237`,
        name: `INVALID_ACCOUNT_NAME`,
        message: `INVALID_ACCOUNT_NAME`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '238': {
        code: `238`,
        name: `USER_NOT_FOUND`,
        message: `User not registered with LockFreezeGateway`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '239': {
        code: `239`,
        name: `INVALID_DATE_RANGE`,
        message: `INVALID_DATE_RANGE`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '240': {
        code: `240`,
        name: `CUSTOMER_NOT_FOUND`,
        message: `CUSTOMER_NOT_FOUND`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '241': {
        code: `241`,
        name: `CUSTOMER_LOCKED`,
        message: `CUSTOMER_LOCKED`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '242': {
        code: `242`,
        name: `NO_ACTIVE_ENROLLMENT`,
        message: `NO_ACTIVE_ENROLLMENT`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '243': {
        code: `243`,
        name: `ASSET_NOT_FOUND`,
        message: `ASSET_NOT_FOUND`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '244': {
        code: `244`,
        name: `SUBSCRIBER_NOT_FOUND`,
        message: `SUBSCRIBER_NOT_FOUND`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '245': {
        code: `245`,
        name: `NO_ALERT_PRESENT`,
        message: `NO_ALERT_PRESENT`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '246': {
        code: `246`,
        name: `INITIAL`,
        message: `INITIAL`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '247': {
        code: `247`,
        name: `ACTIVEDUTY`,
        message: `ACTIVEDUTY`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '248': {
        code: `248`,
        name: `EXTENDED`,
        message: `EXTENDED`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '249': {
        code: `249`,
        name: `INITIAL_ACTIVEDUTY`,
        message: `INITIAL_ACTIVEDUTY`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '250': {
        code: `250`,
        name: `INITIAL_EXTENDED`,
        message: `INITIAL_EXTENDED`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '251': {
        code: `251`,
        name: `ACTIVEDUTY_EXTENDED`,
        message: `ACTIVEDUTY_EXTENDED`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '252': {
        code: `252`,
        name: `INITIAL_ACTIVEDUTY_EXTENDED`,
        message: `INITIAL_ACTIVEDUTY_EXTENDED`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '253': {
        code: `253`,
        name: `GenericError`,
        message: `GenericError`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '254': {
        code: `254`,
        name: `GenericFailure`,
        message: `GenericFailure`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '255': {
        code: `255`,
        name: `InvalidAccountInfo`,
        message: `InvalidAccountInfo`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '256': {
        code: `256`,
        name: `InactiveAccount`,
        message: `InactiveAccount`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '257': {
        code: `257`,
        name: `ClientNotFound`,
        message: `ClientNotFound`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '258': {
        code: `258`,
        name: `OptionNotAvailableFromBureau`,
        message: `OptionNotAvailableFromBureau`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '259': {
        code: `259`,
        name: `FileSuppressed`,
        message: `FileSuppressed`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '260': {
        code: `260`,
        name: `InvalidBirthDate`,
        message: `InvalidBirthDate`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '261': {
        code: `261`,
        name: `SecurityFreeze`,
        message: `SecurityFreeze`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '277': {
        code: `277`,
        name: `CANNOT_RETRIEVE_FIN`,
        message: `CANNOT_RETRIEVE_FIN`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '296': {
        code: `296`,
        name: `FAILED_TO_CREATE_CRS3_CC_XML`,
        message: `FAILED_TO_CREATE_CRS3_CC_XML`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '301': {
        code: `301`,
        name: `SERVICE_UNAVAILABLE`,
        message: `SERVICE_UNAVAILABLE`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '302': {
        code: `302`,
        name: `SERVICE_LOCATOR`,
        message: `SERVICE_LOCATOR`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '303': {
        code: `303`,
        name: `SERVICE_ERROR`,
        message: `SERVICE_ERROR`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '310': {
        code: `310`,
        name: `MULTIPLE_FINS_FOUND`,
        message: `Ineligible for online disputes, file maintenance needed`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '320': {
        code: `320`,
        name: `FIN_IN_USE`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '321': {
        code: `321`,
        name: `FIN_HAS_OPEN_DISPUTE`,
        message: `Open dispute already exists on file`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '323': {
        code: `323`,
        name: `PRIORITY_OR_FRAUD_FIN`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '330': {
        code: `330`,
        name: `UNKNOWN_JAVA_EXCEPTION`,
        message: `Unknown java exception`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '331': {
        code: `331`,
        name: `UNKNOWN_APP_ERROR`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '332': {
        code: `332`,
        name: `UNKNOWN_APP_EXCEPTION`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '333': {
        code: `333`,
        name: `UNKNOWN_CICS_EXCEPTION`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '340': {
        code: `340`,
        name: `INVALID_FIN`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '352': {
        code: `352`,
        name: `MISSING_LINE_ITEM`,
        message: `Line item is Missing`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '353': {
        code: `353`,
        name: `DUPLICATE_LINE_ITEM`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '354': {
        code: `354`,
        name: `REQUIRED_DOCUMENT_IS_NULL`,
        message: `Required document is null.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '355': {
        code: `355`,
        name: `INVALID_REQUEST_BEAN`,
        message: `Invalid request bean is passed.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '356': {
        code: `356`,
        name: `INVALID_REQUEST_PARAMETER`,
        message: `Invalid request parameter is passed.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '357': {
        code: `357`,
        name: `FIN_RELATED_TO_LAW`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '358': {
        code: `358`,
        name: `FIN_IS_LOCKED`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '359': {
        code: `359`,
        name: `FIN_IS_MID`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '360': {
        code: `360`,
        name: `FIN_IS_JOINT`,
        message: `System error, please try again. `,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '361': {
        code: `361`,
        name: `FIN_IS_RELATED_TO_TPL`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '362': {
        code: `362`,
        name: `FIN_IS_DEAD`,
        message: `Ineligible for online disputes, file maintenance needed`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '363': {
        code: `363`,
        name: `FIN_IS_ARCHIVED`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '364': {
        code: `364`,
        name: `ASSOCIATED_PARTY_ID_INVALID`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '365': {
        code: `365`,
        name: `INVALID_PARENT_ACTIVITY`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '367': {
        code: `367`,
        name: `FAILED_TO_CREATE_CRS_3_CC_XML`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '368': {
        code: `368`,
        name: `INVALID_ACTIVITY_TYPE`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '369': {
        code: `369`,
        name: `NO_ACTIVITY_FOUND`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '370': {
        code: `370`,
        name: `CANNOT_RETRIEVE_CREDIT_FILE_BY_PARTY_ID`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '371': {
        code: `371`,
        name: `FIN_NOT_FOUND`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '373': {
        code: `373`,
        name: `ERROR_WRITING_TO_JMS_QUEUE`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '389': {
        code: `389`,
        name: `REPEAT_DISPUTE`,
        message: `Ineligible for online disputes, file maintenance needed`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '391': {
        code: `391`,
        name: `INVALID_COMMAND`,
        message: `Exceeds max characters or has special characters`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '392': {
        code: `392`,
        name: `MISSING_COMMENT`,
        message: `Dispute requires a comment`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '393': {
        code: `393`,
        name: `INVALID_DISPUTE`,
        message: `If dispute reason is "Other", a second dispute reason is not allowed`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '400': {
        code: `400`,
        name: `Failure_400`,
        message: `Failure_400`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '401': {
        code: `401`,
        name: `Failure_401`,
        message: `Failure_401`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '403': {
        code: `403`,
        name: `Failure_403`,
        message: `Failure_403`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '404': {
        code: `404`,
        name: `Failure_404`,
        message: `Failure_404`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '409': {
        code: `409`,
        name: `Failure_409`,
        message: `Failure_409`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '422': {
        code: `422`,
        name: `Failure_422`,
        message: `Failure_422`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '429': {
        code: `429`,
        name: `Failure_429`,
        message: `Failure_429`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '440': {
        code: `440`,
        name: `NO_CREDIT_FILE_FOUND`,
        message: `System error, please try again.`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '457': {
        code: `457`,
        name: `CREDIT_FILE_IS_SUPRESSED`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '458': {
        code: `458`,
        name: `FRAUD_ADDRESS_IN_CREDIT_FILE`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '459': {
        code: `459`,
        name: `FRAUD_EMPLOYMENT_IN_CREDIT_FILE`,
        message: `Ineligible for online disputes`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '460': {
        code: `460`,
        name: `ERROR_FETCHING_DATA_FROM_TURF`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '461': {
        code: `461`,
        name: `TRUECREDIT_SSN_DOES_NOT_MATCH_C3`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '462': {
        code: `462`,
        name: `NON_POLICE_FRAUD_DOCUMENT_UPLOAD`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '463': {
        code: `463`,
        name: `MANUAL_PROCESSING`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '464': {
        code: `464`,
        name: `UPLOAD_FAILED_DISPUTE`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '465': {
        code: `465`,
        name: `DOCUMENT_FILE_TYPE_ERROR`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '466': {
        code: `466`,
        name: `DOCUMENT_MAX_SIZE_EXCEEDED_ERROR`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '467': {
        code: `467`,
        name: `DOCUMENT_UPLOAD_EDEG_FAILED`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '468': {
        code: `468`,
        name: `POLICE_FRAUD_DOCUMENT_UPLOAD`,
        message: `Document Upload is not available for CC2 Partners`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '469': {
        code: `469`,
        name: `MANUAL_ONLINE`,
        message: `System error, please try again.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '500': {
        code: `500`,
        name: `Failure_500`,
        message: `Failure_500`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '503': {
        code: `503`,
        name: `Failure_503`,
        message: `Failure_503`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '999': {
        code: `999`,
        name: `TestName`,
        message: `Description`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '2001': {
        code: `2001`,
        name: `UPLOAD_DOC_ID_PRESENT`,
        message: `UPLOAD_DOC_ID_PRESENT`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '2002': {
        code: `2002`,
        name: `ADDRESS_PARSING_ERROR`,
        message: `ADDRESS_PARSING_ERROR`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '10219': {
        code: `10219`,
        name: `MULTIPLE_FILES_FOUND`,
        message: `Ineligible for online disputes, file maintenance needed`,
        category: `Disputes`,
        method: `Multiple`,
        action: `unavailable`,
    },
    '10221': {
        code: `10221`,
        name: `TRUECREDIT_SSN_DOES_NOT_MATCH_C_3`,
        message: `System error, please try again.`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '101122': {
        code: `101122`,
        name: `CC2CollectPrintDataFailure`,
        message: `Failure/Non-Success Response from CC2 Collect Print Data Method`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `retry`,
    },
    '102044': {
        code: `102044`,
        name: `CC2GetDisputeStatusMissingOrInvalidIdentifierTypeId`,
        message: `Incomplete Dispute- Missing or Invalid IdentifierType - Id.`,
        category: `Disputes`,
        method: `GetDisputeStatus`,
        action: `error`,
    },
    '101141': {
        code: `101141`,
        name: `CC2CreditCompassFailure`,
        message: `Failure/Non-Success Response from CC2 CreditCompass Method`,
        category: `CreditCompass`,
        method: `CreditCompass`,
        action: `retry`,
    },
    '101116': {
        code: `101116`,
        name: `CC2DeleteSSNCacheFailure`,
        message: `Failure/Non-Success Response from CC2 Delete SSN Cache Method`,
        category: `Delete SSN Cache`,
        method: `DeleteSSNCache`,
        action: `retry`,
    },
    '101103': {
        code: `101103`,
        name: `CC2EnrollFailure`,
        message: `Failure/Non-Success Response from CC2 Enroll Method`,
        category: `General Subscription`,
        method: `Enroll`,
        action: `retry`,
    },
    '102045': {
        code: `102045`,
        name: `CC2GetDisputeStatusMissingOrInvalidIdentifierType`,
        message: `Incomplete Dispute- Missing or Invalid IdentifierType.`,
        category: `Disputes`,
        method: `GetDisputeStatus`,
        action: `error`,
    },
    '101101': {
        code: `101101`,
        name: `CC2FulfillFailure`,
        message: `Failure/Non-Success Response from CC2 Fulfill Method`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `retry`,
    },
    '101109': {
        code: `101109`,
        name: `CC2GetAlertsFailure`,
        message: `Failure/Non-Success Response from CC2 Get Alerts Method`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `retry`,
    },
    '101105': {
        code: `101105`,
        name: `CC2GetAlertsNotificationsForAllUsersFailure`,
        message: `Failure/Non-Success Response from CC2 Get Alerts Notifications For All Users Method`,
        category: `Monitoring`,
        method: `GetAlertNotificationsForAllUsers`,
        action: `retry`,
    },
    '101110': {
        code: `101110`,
        name: `CC2GetAuthenticationQuestionsFailure`,
        message: `Failure/Non-Success Response from CC2 Get Authentication Questions Method`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `retry`,
    },
    '101119': {
        code: `101119`,
        name: `CC2GetCustomerFailure`,
        message: `Failure/Non-Success Response from CC2 Get Customer Method`,
        category: `General`,
        method: `GetCustomer`,
        action: `retry`,
    },
    '101120': {
        code: `101120`,
        name: `CC2GetIdentityMonitoringInfoFailure`,
        message: `Failure/Non-Success Response from CC2 Get Identity Monitoring Information Method`,
        category: `Identity Protection`,
        method: `GetIdentityMonitoringInfo`,
        action: `retry`,
    },
    '101127': {
        code: `101127`,
        name: `CC2GetLockStatusFailure`,
        message: `Failure/Non-Success Response from CC2 Get Lock Status Method`,
        category: `CreditLock`,
        method: `GetLockStatus`,
        action: `retry`,
    },
    '101124': {
        code: `101124`,
        name: `CC2GetPendingPrintStatusFailure`,
        message: `Failure/Non-Success Response from CC2 Get Pending Print Status Method`,
        category: `Offline Print`,
        method: `GetPendingPrintStatus`,
        action: `retry`,
    },
    '101102': {
        code: `101102`,
        name: `CC2GetServiceProductFailure`,
        message: `Failure/Non-Success Response from CC2 Get Service Product Method`,
        category: `GetServiceProduct`,
        method: `GetServiceProduct`,
        action: `retry`,
    },
    '101111': {
        code: `101111`,
        name: `CC2GetTrendingDataFailure`,
        message: `Failure/Non-Success Response from CC2 Get Trending Data Method`,
        category: `Product Trending`,
        method: `GetTrendingData`,
        action: `retry`,
    },
    '101138': {
        code: `101138`,
        name: `CC2GetDisputeHistoryFailure`,
        message: `Failure/Non-Success Response from CC2 GetDisputeHistory Method`,
        category: `Disputes`,
        method: `GetDisputeHistory`,
        action: `retry`,
    },
    '101139': {
        code: `101139`,
        name: `CC2GetDisputeStatusFailure`,
        message: `Failure/Non-Success Response from CC2 GetDisputeStatus Method`,
        category: `Disputes`,
        method: `GetDisputeStatus`,
        action: `retry`,
    },
    '101131': {
        code: `101131`,
        name: `CC2GetFraudAlertStatusFailure`,
        message: `Failure/Non-Success Response from CC2 GetFraudAlertStatus Method`,
        category: `Fraud Alerts`,
        method: `GetFraudAlertStatus`,
        action: `retry`,
    },
    '101137': {
        code: `101137`,
        name: `CC2GetInvestigationResultsFailure`,
        message: `Failure/Non-Success Response from CC2 GetInvestigationResults Method`,
        category: `Disputes`,
        method: `GetInvestigationResults`,
        action: `retry`,
    },
    '101112': {
        code: `101112`,
        name: `CC2IndicativeEnrichmentFailure`,
        message: `Failure/Non-Success Response from CC2 Indicative Enrichment Method`,
        category: `Indicative enrichment`,
        method: `IndicativeEnrichment`,
        action: `retry`,
    },
    '101106': {
        code: `101106`,
        name: `CC2IsEnrolledFailure`,
        message: `Failure/Non-Success Response from CC2 Is Enrolled Method`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `retry`,
    },
    '101125': {
        code: `101125`,
        name: `CC2LockFailure`,
        message: `Failure/Non-Success Response from CC2 Lock Method`,
        category: `CreditLock`,
        method: `Lock`,
        action: `retry`,
    },
    '101114': {
        code: `101114`,
        name: `CC2LookupSSNOrClientKeyFailure`,
        message: `Failure/Non-Success Response from CC2 Lookup SSN or Client Key Method`,
        category: `Lookup SSN or Client Key`,
        method: `LookupSsnOrClientKey`,
        action: `retry`,
    },
    '103098': {
        code: `103098`,
        name: `PreFillFailure`,
        message: `Failure/Non-Success Response from CC2 PreFill Method`,
        category: `Prefill`,
        method: `Multiple`,
        action: `retry`,
    },
    '101142': {
        code: `101142`,
        name: `CC2PreFillStartFailure`,
        message: `Failure/Non-Success Response from CC2 PreFillStart Method`,
        category: `Prefill`,
        method: `PreFillStart`,
        action: `retry`,
    },
    '101143': {
        code: `101143`,
        name: `CC2PullAdTokenFailure`,
        message: `Failure/Non-Success Response from CC2 PullAdToken Method`,
        category: `Ads`,
        method: `PullAdToken`,
        action: `retry`,
    },
    '101140': {
        code: `101140`,
        name: `CC2QualifyLockFailure`,
        message: `Failure/Non-Success Response from CC2 QualifyLock Method`,
        category: `CreditLock`,
        method: `QualifyLock`,
        action: `retry`,
    },
    '101134': {
        code: `101134`,
        name: `CC2RemoveFraudAlertFailure`,
        message: `Failure/Non-Success Response from CC2 RemoveFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `RemoveFraudAlert`,
        action: `retry`,
    },
    '101135': {
        code: `101135`,
        name: `CC2RemoveLockFailure`,
        message: `Failure/Non-Success Response from CC2 RemoveLock Method`,
        category: `CreditLock`,
        method: `RemoveLock`,
        action: `retry`,
    },
    '101118': {
        code: `101118`,
        name: `CC2SaveCustomerFailure`,
        message: `Failure/Non-Success Response from CC2 Save Customer Method`,
        category: `General`,
        method: `SaveCustomer`,
        action: `retry`,
    },
    '101117': {
        code: `101117`,
        name: `CC2SimulateVantageScoreFailure`,
        message: `Failure/Non-Success Response from CC2 Simulate Vantage Score Method`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `retry`,
    },
    '101129': {
        code: `101129`,
        name: `CC2SimulateCreditVisionScoreFailure`,
        message: `Failure/Non-Success Response from CC2 SimulateCreditVisionScore Method`,
        category: `Score Simulation`,
        method: `SimulateCreditVisionScore`,
        action: `retry`,
    },
    '101123': {
        code: `101123`,
        name: `CC2StartOfflinePrintFailure`,
        message: `Failure/Non-Success Response from CC2 Start Offline Print Method`,
        category: `Offline Print`,
        method: `StartOfflinePrint`,
        action: `retry`,
    },
    '101136': {
        code: `101136`,
        name: `CC2StartDisputeFailure`,
        message: `Failure/Non-Success Response from CC2 StartDispute Method`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `retry`,
    },
    '101126': {
        code: `101126`,
        name: `CC2UnLockFailure`,
        message: `Failure/Non-Success Response from CC2 UnLock Method`,
        category: `CreditLock`,
        method: `Unlock`,
        action: `retry`,
    },
    '102012': {
        code: `102012`,
        name: `InvalidServiceBundleGetServiceProduct`,
        message: `Invalid Service Bundle for GetServiceProduct`,
        category: `GetServiceProduct`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '102019': {
        code: `102019`,
        name: `IPAddressMissing`,
        message: `IP Address is missing`,
        category: `Product Display`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '102020': {
        code: `102020`,
        name: `InvalidIPAddress`,
        message: `IP Address is invalid`,
        category: `Product Display`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '101115': {
        code: `101115`,
        name: `CC2UpdateEnrollmentFailure`,
        message: `Failure/Non-Success Response from CC2 Update Enrollment Method`,
        category: `General Subscription`,
        method: `UpdateEnrollment`,
        action: `retry`,
    },
    '101121': {
        code: `101121`,
        name: `CC2UpdateIdentityMonitoringInfoFailure`,
        message: `Failure/Non-Success Response from CC2 Update Identity Monitoring Information Method`,
        category: `Identity Protection`,
        method: `UpdateIdentityMonitoringInfo `,
        action: `retry`,
    },
    '102021': {
        code: `102021`,
        name: `CSFRTokenTooLong`,
        message: `CSFRToken is too long`,
        category: `Product Display`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '101133': {
        code: `101133`,
        name: `CC2UpdateFraudAlertFailure`,
        message: `Failure/Non-Success Response from CC2 UpdateFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `UpdateFraudAlert`,
        action: `retry`,
    },
    '101108': {
        code: `101108`,
        name: `CC2VerifyAuthenticationQuestionsFailure`,
        message: `Failure/Non-Success Response from CC2 Verify Authentication Questions Method`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `retry`,
    },
    '101032': {
        code: `101032`,
        name: `CC2AddFraudAlertError`,
        message: `General Exception/Error within CC2 AddFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `AddFraudAlert`,
        action: `retry`,
    },
    '102032': {
        code: `102032`,
        name: `ClientBrowserUserAgentTooLong`,
        message: `Client Browser User Agent is too long`,
        category: `Product Display`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '101004': {
        code: `101004`,
        name: `CC2CancelEnrollmentError`,
        message: `General Exception/Error within CC2 Cancel Enrollment Method`,
        category: `General Subscription`,
        method: `CancelEnrollment`,
        action: `retry`,
    },
    '101022': {
        code: `101022`,
        name: `CC2CollectPrintDataError`,
        message: `General Exception/Error within CC2 Collect Print Data Method`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `retry`,
    },
    '101202': {
        code: `101202`,
        name: `CC2CompareCreditReportsFailure`,
        message: `General Exception/Error within CC2 CompareCreditReports Method`,
        category: `CompareCreditReports`,
        method: `CompareCreditReports`,
        action: `retry`,
    },
    '103057': {
        code: `103057`,
        name: `GetServiceProductNotRetrievable`,
        message: `The service product cannot be retrieved via the GetServiceProduct method.`,
        category: `GetServiceProduct`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '101040': {
        code: `101040`,
        name: `CC2CreditCompassError`,
        message: `General Exception/Error within CC2 CreditCompass Method`,
        category: `CreditCompass`,
        method: `CreditCompass`,
        action: `retry`,
    },
    '101016': {
        code: `101016`,
        name: `CC2DeleteSSNCacheError`,
        message: `General Exception/Error within CC2 Delete SSN Cache Method`,
        category: `Delete SSN Cache`,
        method: `DeleteSSNCache`,
        action: `retry`,
    },
    '101144': {
        code: `101144`,
        name: `CC2DeleteCustomerError`,
        message: `General Exception/Error within CC2 DeleteCustomer Method`,
        category: `General`,
        method: `DeleteCustomer`,
        action: `retry`,
    },
    '101003': {
        code: `101003`,
        name: `CC2EnrollError`,
        message: `General Exception/Error within CC2 Enroll Method`,
        category: `General Subscription`,
        method: `Enroll`,
        action: `retry`,
    },
    '101001': {
        code: `101001`,
        name: `CC2FulfillError`,
        message: `General Exception/Error within CC2 Fulfill Method`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `retry`,
    },
    '101009': {
        code: `101009`,
        name: `CC2GetAlertsError`,
        message: `General Exception/Error within CC2 Get Alerts Method`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `retry`,
    },
    '101005': {
        code: `101005`,
        name: `CC2GetAlertsNotificationsForAllUsersError`,
        message: `General Exception/Error within CC2 Get Alerts Notifications For All Users Method`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `retry`,
    },
    '101010': {
        code: `101010`,
        name: `CC2GetAuthenticationQuestionsError`,
        message: `General Exception/Error within CC2 Get Authentication Questions Method`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `retry`,
    },
    '101019': {
        code: `101019`,
        name: `CC2GetCustomerError`,
        message: `General Exception/Error within CC2 Get Customer Method`,
        category: `Ads`,
        method: `GetCustomer`,
        action: `retry`,
    },
    '101020': {
        code: `101020`,
        name: `CC2GetIdentityMonitoringInfoError`,
        message: `General Exception/Error within CC2 Get Identity Monitoring Information Method`,
        category: `Identity Protection`,
        method: `GetIdentityMonitoringInfo`,
        action: `retry`,
    },
    '101027': {
        code: `101027`,
        name: `CC2GetLockStatusError`,
        message: `General Exception/Error within CC2 Get Lock Status Method`,
        category: `CreditLock`,
        method: `GetLockStatus`,
        action: `retry`,
    },
    '101024': {
        code: `101024`,
        name: `CC2GetPendingPrintStatusError`,
        message: `General Exception/Error within CC2 Get Pending Print Status Method`,
        category: `Offline Print`,
        method: `GetPendingPrintStatus`,
        action: `retry`,
    },
    '101002': {
        code: `101002`,
        name: `CC2GetServiceProductError`,
        message: `General Exception/Error within CC2 Get Service Product Method`,
        category: `GetServiceProduct`,
        method: `GetServiceProduct`,
        action: `retry`,
    },
    '101011': {
        code: `101011`,
        name: `CC2GetTrendingDataError`,
        message: `General Exception/Error within CC2 Get Trending Data Method`,
        category: `Product Trending`,
        method: `GetTrendingData`,
        action: `retry`,
    },
    '101038': {
        code: `101038`,
        name: `CC2GetDisputeHistoryError`,
        message: `General Exception/Error within CC2 GetDisputeHistory Method`,
        category: `Disputes`,
        method: `GetDisputeHistory`,
        action: `retry`,
    },
    '101039': {
        code: `101039`,
        name: `CC2GetDisputeStatusError`,
        message: `General Exception/Error within CC2 GetDisputeStatus Method`,
        category: `Disputes`,
        method: `GetDisputeStatus`,
        action: `retry`,
    },
    '101031': {
        code: `101031`,
        name: `CC2GetFraudAlertStatusError`,
        message: `General Exception/Error within CC2 GetFraudAlertStatus Method`,
        category: `Fraud Alerts`,
        method: `GetFraudAlertStatus`,
        action: `retry`,
    },
    '101037': {
        code: `101037`,
        name: `CC2GetInvestigationResultsError`,
        message: `General Exception/Error within CC2 GetInvestigationResults Method`,
        category: `Disputes`,
        method: `GetInvestigationResults`,
        action: `retry`,
    },
    '101012': {
        code: `101012`,
        name: `CC2IndicativeEnrichmentError`,
        message: `General Exception/Error within CC2 Indicative Enrichment Method`,
        category: `Indicative enrichment`,
        method: `IndicativeEnrichment`,
        action: `retry`,
    },
    '101006': {
        code: `101006`,
        name: `CC2IsEnrolledError`,
        message: `General Exception/Error within CC2 Is Enrolled Method`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `retry`,
    },
    '103066': {
        code: `103066`,
        name: `DataRestrictionError`,
        message: `An error was encountered while attempting to apply a data restriction XSL during the requested fulfillment`,
        category: `Product Display`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '103069': {
        code: `103069`,
        name: `FulfillmentKeyNotValidForRequestInformation`,
        message: `The fulfillment key is not valid for the request information (AccountID, ClientKey, ServiceBundleCode)`,
        category: `GetServiceProduct`,
        method: `GetServiceProduct`,
        action: `error`,
    },
    '101025': {
        code: `101025`,
        name: `CC2LockError`,
        message: `General Exception/Error within CC2 Lock Method`,
        category: `CreditLock`,
        method: `Lock`,
        action: `retry`,
    },
    '101014': {
        code: `101014`,
        name: `CC2LookupSSNOrClientKeyError`,
        message: `General Exception/Error within CC2 Lookup SSN or Client Key Method`,
        category: `Lookup SSN or Client Key`,
        method: `LookupSsnOrClientKey`,
        action: `retry`,
    },
    '101041': {
        code: `101041`,
        name: `CC2PullAdTokenError`,
        message: `General Exception/Error within CC2 PullAdToken Method`,
        category: `Ads`,
        method: `PullAdToken`,
        action: `retry`,
    },
    '101034': {
        code: `101034`,
        name: `CC2RemoveFraudAlertError`,
        message: `General Exception/Error within CC2 RemoveFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `RemoveFraudAlert`,
        action: `retry`,
    },
    '101035': {
        code: `101035`,
        name: `CC2RemoveLockError`,
        message: `General Exception/Error within CC2 RemoveLock Method`,
        category: `CreditLock`,
        method: `RemoveLock`,
        action: `retry`,
    },
    '101018': {
        code: `101018`,
        name: `CC2SaveCustomerError`,
        message: `General Exception/Error within CC2 Save Customer Method`,
        category: `General`,
        method: `SaveCustomer`,
        action: `retry`,
    },
    '101017': {
        code: `101017`,
        name: `CC2SimulateVantageScoreError`,
        message: `General Exception/Error within CC2 Simulate Vantage Score Method`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `retry`,
    },
    '101201': {
        code: `101201`,
        name: `MergeCreditReportFailure`,
        message: `Failure/Non-Success Response from Data Service Merge Credit Report`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '101029': {
        code: `101029`,
        name: `CC2SimulateCreditVisionScoreError`,
        message: `General Exception/Error within CC2 SimulateCreditVisionScore Method`,
        category: `Score Simulation`,
        method: `SimulateCreditVisionScore`,
        action: `retry`,
    },
    '102001': {
        code: `102001`,
        name: `InvalidAccountName`,
        message: `Invalid Account Name`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102002': {
        code: `102002`,
        name: `ClientKeyMissing`,
        message: `Client Key is missing`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102003': {
        code: `102003`,
        name: `ClientKeyTooLong`,
        message: `Client Key is too long`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102004': {
        code: `102004`,
        name: `RequestKeyMissing`,
        message: `Request Key is missing`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102005': {
        code: `102005`,
        name: `RequestKeyTooLong`,
        message: `Request Key is too long`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102006': {
        code: `102006`,
        name: `AccountCodeMissing`,
        message: `Account Code is missing`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102007': {
        code: `102007`,
        name: `ActiveDirectoryUserNameNotFound`,
        message: `Active Directory UserName not found`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102008': {
        code: `102008`,
        name: `ServiceBundleCodeTooLong`,
        message: `Service Bundle Code is too long`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102009': {
        code: `102009`,
        name: `ServiceBundleNotFound`,
        message: `Service Bundle not found`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102010': {
        code: `102010`,
        name: `SSNAndClientKeyMissing`,
        message: `SSN and Client key are missing`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '101023': {
        code: `101023`,
        name: `CC2StartOfflinePrintError`,
        message: `General Exception/Error within CC2 Start Offline Print Method`,
        category: `Offline Print`,
        method: `StartOfflinePrint`,
        action: `retry`,
    },
    '101036': {
        code: `101036`,
        name: `CC2StartDisputeError`,
        message: `General Exception/Error within CC2 StartDispute Method`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `retry`,
    },
    '102013': {
        code: `102013`,
        name: `ScoreModifierXMLCannotLoad`,
        message: `Score Modifier XML could not be loaded`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `error`,
    },
    '102014': {
        code: `102014`,
        name: `ScoreModifierXMLHasNoModifiers`,
        message: `Score Modifier XML does not contain any score modifiers`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `error`,
    },
    '102015': {
        code: `102015`,
        name: `InvalidInputsForIsEnrolled`,
        message: `IsEnrolled request does not contain valid inputs`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `error`,
    },
    '102016': {
        code: `102016`,
        name: `InvalidServiceBundleGetAuthenticationQuestions`,
        message: `Invalid service bundle for ConsumerAuthenticationQuestions`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '103002': {
        code: `103002`,
        name: `IndicativeEnrichmentServiceBundleCodeNoIEServiceProduct`,
        message: `Service bundle does not contain Indicative Enrichment service product`,
        category: `Indicative enrichment`,
        method: `IndicativeEnrichment`,
        action: `error`,
    },
    '103004': {
        code: `103004`,
        name: `IndicativeEnrichmentError`,
        message: `Data service error message from indicative enrichment web call`,
        category: `Indicative enrichment`,
        method: `IndicativeEnrichment`,
        action: `error`,
    },
    '101026': {
        code: `101026`,
        name: `CC2UnLockError`,
        message: `General Exception/Error within CC2 UnLock Method`,
        category: `CreditLock`,
        method: `UnLock`,
        action: `retry`,
    },
    '101015': {
        code: `101015`,
        name: `CC2UpdateEnrollmentError`,
        message: `General Exception/Error within CC2 Update Enrollment Method`,
        category: `General Subscription`,
        method: `UpdateEnrollment`,
        action: `retry`,
    },
    '102036': {
        code: `102036`,
        name: `CC2StartDisputeMissingCreditReportItemAndClaimCode`,
        message: `Incomplete Dispute- CreditReportItem and ClaimCode is missing`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102022': {
        code: `102022`,
        name: `InvalidDateOfBirth`,
        message: `Date of Birth is invalid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102026': {
        code: `102026`,
        name: `GetQuestionsMissingServiceBundleCode`,
        message: `Get Authentication Questions does not contain ServiceBundleCode`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '102037': {
        code: `102037`,
        name: `CC2StartDisputeMissingCreditReportItem`,
        message: `Incomplete Dispute- CreditReportItem is missing`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102038': {
        code: `102038`,
        name: `CC2StartDisputeMissingOrInvalidClaimCode`,
        message: `Incomplete Dispute- Missing or Invalid ClaimCode`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102040': {
        code: `102040`,
        name: `CC2StartDisputeMissingOrInvalidIdentifierType`,
        message: `Incomplete Dispute- Missing or Invalid IdentifierType`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102041': {
        code: `102041`,
        name: `CC2StartDisputeMissingOrInvalidIdentifierTypeId`,
        message: `Incomplete Dispute- Missing or Invalid IdentifierType - Id`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102031': {
        code: `102031`,
        name: `GetQuestionsError`,
        message: `Unhandled Error during GetAuthenticaionQuestions`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '102043': {
        code: `102043`,
        name: `CC2StartDisputeMissingOrInvalidFileType`,
        message: `Incomplete Dispute- Missing or Invalid attachment file Type.`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102033': {
        code: `102033`,
        name: `InvalidFirstOrLastName`,
        message: `Input FirstName or LastName is null or empty`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102034': {
        code: `102034`,
        name: `InvalidZipCode`,
        message: `Input ZipCode must be 5 numeric characters in length`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102035': {
        code: `102035`,
        name: `InvalidCurrentAddress`,
        message: `Input Address 1 is null or empty`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '102047': {
        code: `102047`,
        name: `CC2StartDisputeMissingFileName`,
        message: `Incomplete Dispute- Missing attachment file name`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '102048': {
        code: `102048`,
        name: `DocumentIdMissingOrInvalid`,
        message: `DocumentId is missing or invalid`,
        category: `Disputes`,
        method: `StartDispute`,
        action: `error`,
    },
    '221': {
        code: `221`,
        name: `WRONG_ROSTER_FOR_USER`,
        message: `wrong answer for user`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '102039': {
        code: `102039`,
        name: `DisputeIdMissingOrInvalid`,
        message: `Missing  or invalid disputeID`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '222': {
        code: `222`,
        name: `ChallengeNotInProgress`,
        message: `Challenge not in progress`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '223': {
        code: `223`,
        name: `InvalidAnswerChoice`,
        message: `Invalid Answer Choice`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '224': {
        code: `224`,
        name: `InvalidApplicantChallenge`,
        message: `Invalid Applicant Challenge`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '228': {
        code: `228`,
        name: `ChallengeNotInProgresss`,
        message: `Challenge not in progress`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '101021': {
        code: `101021`,
        name: `CC2UpdateIdentityMonitoringInfoError`,
        message: `General Exception/Error within CC2 Update Identity Monitoring Information Method`,
        category: `Identity Protection`,
        method: `UpdateIdentityMonitoringInfo `,
        action: `retry`,
    },
    '101033': {
        code: `101033`,
        name: `CC2UpdateFraudAlertError`,
        message: `General Exception/Error within CC2 UpdateFraudAlert Method`,
        category: `Fraud Alerts`,
        method: `UpdateFraudAlert`,
        action: `retry`,
    },
    '102046': {
        code: `102046`,
        name: `CC2RegisterFilesForUploadMissingOrInvalidDestination`,
        message: `Missing or Invalid Destination value.`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '101008': {
        code: `101008`,
        name: `CC2VerifyAuthenticationQuestionsError`,
        message: `General Exception/Error within CC2 Verify Authentication Questions Method`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `retry`,
    },
    '102017': {
        code: `102017`,
        name: `InvalidServiceBundleVerifyAuthenticationQuestions`,
        message: `Invalid service bundle for VerifyAuthenticationQuestions`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '102049': {
        code: `102049`,
        name: `CreditReportDataRequired`,
        message: `ServiceBundleFulfillKey (OR) ServiceProductFulfillKey (OR) OriginalData is Missing`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '102050': {
        code: `102050`,
        name: `ScoreChangeNameisMissingOrInvalid`,
        message: `ScoreChangeName field value is missing or invalid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102051': {
        code: `102051`,
        name: `InvalidRequestParameterXml`,
        message: `The incoming xml parameter is in the incorrect format`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103001': {
        code: `103001`,
        name: `ServiceBundleCodeNotFound`,
        message: `Service Bundle Code not found`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102018': {
        code: `102018`,
        name: `InvalidAnswersXMLFormat`,
        message: `Invalid Answers XML Format`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103003': {
        code: `103003`,
        name: `InvalidSSNOrSSNIsNULL`,
        message: `Input SSN is empty or not valid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102027': {
        code: `102027`,
        name: `VerifyAuthenticationQuestionsNoServiceBundle`,
        message: `No service bundle information provided for VerifyAuthenticationQuestions`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '102028': {
        code: `102028`,
        name: `VerifyAuthenticationQuestionsServiceBundleFailure`,
        message: `Failure during service bundle logging for VerifyAuthenticationQuestions`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103006': {
        code: `103006`,
        name: `GetQuestionsServiceBundleCodeNotFound`,
        message: `Service Bundle code not found for GetQuestions`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '103007': {
        code: `103007`,
        name: `SSNandClientKeyDoNotMatch`,
        message: `SSN cache match failed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103008': {
        code: `103008`,
        name: `ClientKeySSNNotFound`,
        message: `SSN not found for client key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103009': {
        code: `103009`,
        name: `ServiceBundleProductClientSideTimeout`,
        message: `Timeout during Service Bundle-Product web call`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103010': {
        code: `103010`,
        name: `SINMatchToDatabaseFailed`,
        message: `Input SIN does not match the value in the SIN cache table for that client key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103011': {
        code: `103011`,
        name: `SSNCacheMatchToDatabaseFailed`,
        message: `Input SSN does not match the value in the SSN cache table for that client key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103012': {
        code: `103012`,
        name: `SSNCacheMatchToReportFailed`,
        message: `SSN from the SSN cache table does not match the SSN returned in the credit report`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103013': {
        code: `103013`,
        name: `SINMatchToReportFailed`,
        message: `SIN from the SIN cache table does not match the SIN returned in the credit report`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103014': {
        code: `103014`,
        name: `DateOfBirthMatchToDatabaseFailed`,
        message: `Input Date of Birth does not match the value in the SIN cache table for that client key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103017': {
        code: `103017`,
        name: `GetQuestionsServiceBundleCodeNoIVServiceProduct`,
        message: `Service bundle does not contain authentication questions service product`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '103019': {
        code: `103019`,
        name: `EnrollmentKeyNotEnrolled`,
        message: `Enrollment key found but status is not active`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103020': {
        code: `103020`,
        name: `EnrollmentKeyCancelled`,
        message: `Enrollment key found but is in cancelled state`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103021': {
        code: `103021`,
        name: `EnrollmentKeyNotFound`,
        message: `Enrollment key could not be found`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103022': {
        code: `103022`,
        name: `EnrollmentNotValidForRequestInformation`,
        message: `Enrollment key is not valid for request information including (accountID, clientkey, ServiceBundleCode)`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103023': {
        code: `103023`,
        name: `IsEssentialProductFailure`,
        message: `Essential service product failed`,
        category: `General Transactional`,
        method: `Multiple`,
        action: `error`,
    },
    '103024': {
        code: `103024`,
        name: `PermissibleFailureCountFailure`,
        message: `Service bundle permissible failure count reached`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103025': {
        code: `103025`,
        name: `SSNFailure`,
        message: `SSN cache match failed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103026': {
        code: `103026`,
        name: `SubsequentFulfillNotAllowed`,
        message: `Subsequent fulfills are not allowed`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `bypass`,
    },
    '103027': {
        code: `103027`,
        name: `EnrollmentNotValidForBundle`,
        message: `Service bundle fulfill key is in a non-active enrollment`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103028': {
        code: `103028`,
        name: `EnrollmentNotValidForProduct`,
        message: `Service product fulfill key is in a non-active enrollment`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103029': {
        code: `103029`,
        name: `ServiceBundleNotSuccess`,
        message: `Service bundle fulfill not successful`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103030': {
        code: `103030`,
        name: `ServiceBundleKeyNotFound`,
        message: `Service bundle fulfill key not found`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103031': {
        code: `103031`,
        name: `ServiceProductKeyNotFound`,
        message: `Service product fulfill key not found`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103032': {
        code: `103032`,
        name: `ServiceBundleKeyInANonActiveEnrollment`,
        message: `Service bundle fulfill key found but it exists in a non-active enrollment`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103033': {
        code: `103033`,
        name: `ServiceProductKeyInANonActiveEnrollment`,
        message: `Service product fulfill key found but it exisst in a non-active enrollment`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103034': {
        code: `103034`,
        name: `ServiceProductInNonSuccessBundle`,
        message: `Service product fulfill found but Service Bundle Fulfillment failed`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103035': {
        code: `103035`,
        name: `SSNMissingClientKeys`,
        message: `SSN does not have any associated client keys`,
        category: `General`,
        method: `LookupSsnOrClientKey`,
        action: `error`,
    },
    '103036': {
        code: `103036`,
        name: `NotAttempted`,
        message: `This service product was not attempted due to a previous failure`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103038': {
        code: `103038`,
        name: `CreditAlertUnsubscribeFailed`,
        message: `Credit Alerts Unsubscribe web call failed`,
        category: `Monitoring`,
        method: `CancelEnrollment`,
        action: `error`,
    },
    '103041': {
        code: `103041`,
        name: `EnrollmentNotFoundEnrollmentKey`,
        message: `Enrollment Not found by Enrollment Key`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `error`,
    },
    '103042': {
        code: `103042`,
        name: `EnrollmentNotFoundServiceBundleCode`,
        message: `Enrollment Not Found by Service Bundle Code`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `error`,
    },
    '103043': {
        code: `103043`,
        name: `EnrollmentNotFoundServiceProductFulfillKey`,
        message: `Enrollment Not found by service product fulfill key`,
        category: `General Subscription`,
        method: `IsEnrolled`,
        action: `error`,
    },
    '103044': {
        code: `103044`,
        name: `EnrollmentKeyDoesNotContainAlertsDetail`,
        message: `Enrollment key does not contain alerts detail`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '103045': {
        code: `103045`,
        name: `EnrollAlreadyHasActiveEnrollment`,
        message: `An active enrollment already exists for the service bundle code and client key`,
        category: `General Subscription`,
        method: `Enroll`,
        action: `bypass`,
    },
    '103046': {
        code: `103046`,
        name: `EnrollAlreadyHasBureauSubscription`,
        message: `An active alert monitoring subscription has been detected at the bureau`,
        category: `Monitoring`,
        method: `Enroll`,
        action: `bypass`,
    },
    '103047': {
        code: `103047`,
        name: `SubsequentFulfillmentMissingEnrollmentKey`,
        message: `Partner calls enroll bundle in the fulfill and does not send the enrollment key`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103049': {
        code: `103049`,
        name: `ServiceBundleFulfillFailure`,
        message: `Service bundle fulfillment failed`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103050': {
        code: `103050`,
        name: `ServiceProductUnknownError`,
        message: `Exception was encountered processing Service Product Fulfill`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103051': {
        code: `103051`,
        name: `GetAlertsServiceProductFailure`,
        message: `Failure during get alerts service product fulfillment`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '103052': {
        code: `103052`,
        name: `GetTrendingProductDataNotReturned`,
        message: `No trending data returned for requested product trending data`,
        category: `Product Trending`,
        method: `GetTrendingData`,
        action: `error`,
    },
    '103054': {
        code: `103054`,
        name: `RequestedScoreNotFound`,
        message: `The requested score was not found on the credit report`,
        category: `Report and Score`,
        method: `Fulfill`,
        action: `error`,
    },
    '103055': {
        code: `103055`,
        name: `NotFulfillable`,
        message: `This service product was not attempted due to it not being a fulfillable product`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103056': {
        code: `103056`,
        name: `ProductTrendingValueNotValid`,
        message: `The requested product trending value was not valid. The value was missing or greater than 64 characters in length`,
        category: `Product Trending`,
        method: `GetTrendingData`,
        action: `error`,
    },
    '102029': {
        code: `102029`,
        name: `VerifyAuthenticationQuestionsNoServiceProduct`,
        message: `No service product information provided for VerifyAuthenticationQuestions`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103058': {
        code: `103058`,
        name: `EnrollmentKeyMissing`,
        message: `Enrollment key is required to simulate a score`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `error`,
    },
    '103059': {
        code: `103059`,
        name: `LookupKeyNotFound`,
        message: `Unable to find the required service product information for specified key`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `error`,
    },
    '103060': {
        code: `103060`,
        name: `ServiceProductFailed`,
        message: `Data service error message from web call`,
        category: `Score Simulation`,
        method: `SimulateVantageScore`,
        action: `error`,
    },
    '103061': {
        code: `103061`,
        name: `MissingCreditReportKey`,
        message: `Fulfillment key does not have an associated credit report`,
        category: `General Transactional`,
        method: `Fulfill`,
        action: `error`,
    },
    '103062': {
        code: `103062`,
        name: `ClientKeyNotFound`,
        message: `The input client key was not found in the SSN cache table`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103063': {
        code: `103063`,
        name: `CustomerNotFound`,
        message: `Unable to find Customer for specified client key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103064': {
        code: `103064`,
        name: `CannotUpgradeToThisBundle`,
        message: `The bundle associated with the existing enrollment is not allowed to upgrade to the bundle referenced in the UpdateEnrollment request`,
        category: `General Subscription`,
        method: `Multiple`,
        action: `error`,
    },
    '103065': {
        code: `103065`,
        name: `RemovingOldServiceProductFailed`,
        message: `An error was encountered while attempting to cancel existing service products from the original enrollment`,
        category: `General Subscription`,
        method: `UpdateEnrollment`,
        action: `error`,
    },
    '102030': {
        code: `102030`,
        name: `VerifyAuthenticationQuestionsServiceProductFailure`,
        message: `Failure during service product logging for VerifyAuthenticationQuestions`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103067': {
        code: `103067`,
        name: `IdentityMonitoringProductFailure`,
        message: `You are attempting to call identity monitoring methods for an enrollment that does not contain any identity monitoring service products`,
        category: `Identity Protection`,
        method: `Multiple`,
        action: `error`,
    },
    '103068': {
        code: `103068`,
        name: `InvalidCustomerInfoXMLForUpdateIdentityMonitoringInfo`,
        message: `The CustomerInfo input for UpdateIdentityMonitoringInfo did not pass XSD validation`,
        category: `Identity Protection`,
        method: `UpdateIdentityMonitoringInfo `,
        action: `error`,
    },
    '103005': {
        code: `103005`,
        name: `VerifyAuthenticationQuestionsFailure`,
        message: `Data service error message from Verify Authentication Questions web call`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103070': {
        code: `103070`,
        name: `OfflinePrintNotAllowed`,
        message: `Offline print functionality is not allowed for this account`,
        category: `Offline Print`,
        method: `Multiple`,
        action: `error`,
    },
    '103071': {
        code: `103071`,
        name: `CollectPrintDataMissingInputKey`,
        message: `Enrollment, bundle or product fulfillment keys are missing from the CollectPrintData request`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `error`,
    },
    '103072': {
        code: `103072`,
        name: `CollectPrintDataNoServiceProducts`,
        message: `No service products were found for the CollectPrintData request`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `error`,
    },
    '103073': {
        code: `103073`,
        name: `CollectPrintDataInvalidAdditionalXml`,
        message: `The Additional XML input for CollectPrintData is invalid`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `error`,
    },
    '103074': {
        code: `103074`,
        name: `CollectPrintDataNoDataToPrint`,
        message: `No data to print was found for the CollectPrintData request`,
        category: `Offline Print`,
        method: `CollectPrintData`,
        action: `error`,
    },
    '103075': {
        code: `103075`,
        name: `NoSsnMissingSafetyCheckData`,
        message: `We are unable to find the customer information in order to perform a safety check`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103076': {
        code: `103076`,
        name: `NoSsnSafetyCheckFailed`,
        message: `The input customer information does not match the customer information on the credit data artifact`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103077': {
        code: `103077`,
        name: `CreditReportVersionRequired`,
        message: `The credit report version is required to be passed into the CC2 method`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '103078': {
        code: `103078`,
        name: `CreditReportVersionInvalid`,
        message: `The input credit report version is invalid or does not match with the expected version`,
        category: `Report and Score`,
        method: `Multiple`,
        action: `error`,
    },
    '103079': {
        code: `103079`,
        name: `SafetyCheckPartialMatchFailed`,
        message: `The input customer information does not match the customer information on the credit data artifact`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103080': {
        code: `103080`,
        name: `GeneralDatabaseException`,
        message: `A database exception has occurred`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103081': {
        code: `103081`,
        name: `InternalServiceConnectivityFailure`,
        message: `An internal service connectivity error has occurred`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103082': {
        code: `103082`,
        name: `InvalidPhoneNumber`,
        message: `Phone number is invalid`,
        category: `Authentication`,
        method: `GetAuthenticationQuestions`,
        action: `error`,
    },
    '103083': {
        code: `103083`,
        name: `InvalidSINOrSINIsNULL`,
        message: `Input SIN is empty or not valid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103084': {
        code: `103084`,
        name: `BundleKeyDidNotMatchClientInputs`,
        message: `The input client key is not allowed to retrieve this bundle fulfillment key`,
        category: `Authentication`,
        method: `VerifyAuthenticationQuestions`,
        action: `error`,
    },
    '103085': {
        code: `103085`,
        name: `BureauDoesNotExistInServiceBundle`,
        message: `The bureau passed into the request does not exist within the service bundle code`,
        category: `Monitoring`,
        method: `GetAlerts`,
        action: `error`,
    },
    '103086': {
        code: `103086`,
        name: `EnrollHasPendingEnrollment`,
        message: `A pending enrollment already exists for this client key and bundle code`,
        category: `General Subscription`,
        method: `Enroll`,
        action: `bypass`,
    },
    '103089': {
        code: `103089`,
        name: `ServiceProductNotFound`,
        message: `Unable to find the required service product within the enrollment`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103090': {
        code: `103090`,
        name: `InvalidCity`,
        message: `City is missing or invalid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103091': {
        code: `103091`,
        name: `MethodDisabled`,
        message: `Your account is not permitted to access this method`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103092': {
        code: `103092`,
        name: `MissingOrInvalidFraudAlertTypeInput`,
        message: `Missing or Invalid Fraud Alert Type`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '103093': {
        code: `103093`,
        name: `CC2RegisterFilesForUploadFailure`,
        message: `CC2RegisterFilesForUploadFailure`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '103094': {
        code: `103094`,
        name: `CC2GetUploadedFilesFailure`,
        message: `CC2GetUploadedFilesFailure`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '103095': {
        code: `103095`,
        name: `CC2GetUploadedFilesError`,
        message: `CC2GetUploadedFilesError`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '103096': {
        code: `103096`,
        name: `CC2RegisterFilesForUploadError`,
        message: `CC2RegisterFilesForUploadError`,
        category: `Disputes`,
        method: `Multiple`,
        action: `error`,
    },
    '103097': {
        code: `103097`,
        name: `InvalidServiceProduct`,
        message: `The input service product is not valid for this request`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '102011': {
        code: `102011`,
        name: `InvalidServiceBundleEnroll`,
        message: `Invalid Service Bundle For Enroll`,
        category: `General Subscription`,
        method: `Enroll`,
        action: `retry`,
    },
    '103099': {
        code: `103099`,
        name: `NoServiceProductInBundle`,
        message: `Service bundle does not contain service product`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103100': {
        code: `103100`,
        name: `NoServiceBundleFulfillFound`,
        message: `Service bundle fulfill not found for Service bundle fulfill key`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103101': {
        code: `103101`,
        name: `ServiceBundleFailureStatus`,
        message: `Service Bundle Failure Status`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103102': {
        code: `103102`,
        name: `ServiceProductFailureStatus`,
        message: `Service Product Failure Status`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103103': {
        code: `103103`,
        name: `CannotUpdateInternetMonitoringLite`,
        message: `Can not update customer info for an enrollment that contains the Internet Monitoring Lite service product.`,
        category: `Identity Protection`,
        method: `Multiple`,
        action: `error`,
    },
    '103104': {
        code: `103104`,
        name: `FoundSsnForClientKeyAndAccountId`,
        message: `SSN already exists for requested combination of account and clientkey`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103105': {
        code: `103105`,
        name: `InvalidServiceBundlePIICache`,
        message: `Invalid bundle for PII caching functionality`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103106': {
        code: `103106`,
        name: `InvalidORMissingSafetyKey`,
        message: `SafetyKey is missing or invalid`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '103107': {
        code: `103107`,
        name: `CustomerCacheMatchFailed`,
        message: `Customer cache match failed`,
        category: `General`,
        method: `Multiple`,
        action: `error`,
    },
    '10000001': {
        code: `10000001`,
        name: `CreditLock_00001`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000003': {
        code: `10000003`,
        name: `CreditLock_00003`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000004': {
        code: `10000004`,
        name: `CreditLock_00004`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000005': {
        code: `10000005`,
        name: `CreditLock_00005`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000006': {
        code: `10000006`,
        name: `CreditLock_00006`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000007': {
        code: `10000007`,
        name: `CreditLock_00007`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000008': {
        code: `10000008`,
        name: `CreditLock_00008`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000009': {
        code: `10000009`,
        name: `CreditLock_00009`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000012': {
        code: `10000012`,
        name: `CreditLock_00012`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000016': {
        code: `10000016`,
        name: `CreditLock_00016`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000020': {
        code: `10000020`,
        name: `CreditLock_00020`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000023': {
        code: `10000023`,
        name: `CreditLock_00023`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000024': {
        code: `10000024`,
        name: `CreditLock_00024`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000025': {
        code: `10000025`,
        name: `CreditLock_00025`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000026': {
        code: `10000026`,
        name: `CreditLock_00026`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000028': {
        code: `10000028`,
        name: `CreditLock_00028`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000029': {
        code: `10000029`,
        name: `CreditLock_00029`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000034': {
        code: `10000034`,
        name: `CreditLock_00034`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000035': {
        code: `10000035`,
        name: `CreditLock_00035`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000036': {
        code: `10000036`,
        name: `CreditLock_00036`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000037': {
        code: `10000037`,
        name: `CreditLock_00037`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000200': {
        code: `10000200`,
        name: `CreditLock_00200`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000201': {
        code: `10000201`,
        name: `CreditLock_00201`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000206': {
        code: `10000206`,
        name: `CreditLock_00206`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000207': {
        code: `10000207`,
        name: `CreditLock_00207`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000208': {
        code: `10000208`,
        name: `CreditLock_00208`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000211': {
        code: `10000211`,
        name: `CreditLock_00211`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000212': {
        code: `10000212`,
        name: `CreditLock_00212`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000217': {
        code: `10000217`,
        name: `CreditLock_00217`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000218': {
        code: `10000218`,
        name: `CreditLock_00218`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000219': {
        code: `10000219`,
        name: `CreditLock_00219`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000220': {
        code: `10000220`,
        name: `CreditLock_00220`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Lock`,
        action: `error`,
    },
    '10000221': {
        code: `10000221`,
        name: `CreditLock_00221`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000222': {
        code: `10000222`,
        name: `CreditLock_00222`,
        message: `Credit Lock not available due to freeze already on file`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000223': {
        code: `10000223`,
        name: `CreditLock_00223`,
        message: `Credit Lock System Undergoing Maintenance`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000236': {
        code: `10000236`,
        name: `CreditLock_00236`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000237': {
        code: `10000237`,
        name: `CreditLock_00237`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000238': {
        code: `10000238`,
        name: `CreditLock_00238`,
        message: `User is not found.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000240': {
        code: `10000240`,
        name: `CreditLock_00240`,
        message: `Credit Lock System Undergoing Maintenance`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000241': {
        code: `10000241`,
        name: `CreditLock_00241`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000243': {
        code: `10000243`,
        name: `CreditLock_00243`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000244': {
        code: `10000244`,
        name: `CreditLock_00244`,
        message: `Multiple Files received for given PII`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000310': {
        code: `10000310`,
        name: `CreditLock_00310`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000320': {
        code: `10000320`,
        name: `CreditLock_00320`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000321': {
        code: `10000321`,
        name: `CreditLock_00321`,
        message: `CreditLock not available due to an open dispute on file`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000323': {
        code: `10000323`,
        name: `CreditLock_00323`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000324': {
        code: `10000324`,
        name: `CreditLock_00324`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000325': {
        code: `10000325`,
        name: `CreditLock_00325`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000330': {
        code: `10000330`,
        name: `CreditLock_00330`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000331': {
        code: `10000331`,
        name: `CreditLock_00331`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000333': {
        code: `10000333`,
        name: `CreditLock_00333`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000334': {
        code: `10000334`,
        name: `CreditLock_00334`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000335': {
        code: `10000335`,
        name: `CreditLock_00335`,
        message: `Something incorrect or missing in the request`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000351': {
        code: `10000351`,
        name: `CreditLock_00351`,
        message: `CreditLock not available due to freeze already on file`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000352': {
        code: `10000352`,
        name: `CreditLock_00352`,
        message: `Unlock request received but there is no lock associated with the SSN`,
        category: `CreditLock`,
        method: `Unlock`,
        action: `error`,
    },
    '10000353': {
        code: `10000353`,
        name: `CreditLock_00353`,
        message: `Unlock request received but the lock is already unlocked`,
        category: `CreditLock`,
        method: `Unlock`,
        action: `error`,
    },
    '10000354': {
        code: `10000354`,
        name: `CreditLock_00354`,
        message: `Re-lock request received but there is no lock associated with the SSN`,
        category: `CreditLock`,
        method: `Lock`,
        action: `error`,
    },
    '10000355': {
        code: `10000355`,
        name: `CreditLock_00355`,
        message: `Re-lock request received but the lock is not unlocked`,
        category: `CreditLock`,
        method: `Lock`,
        action: `error`,
    },
    '10000356': {
        code: `10000356`,
        name: `CreditLock_00356`,
        message: `Remove Lock request received but there is no lock associated with the FIN`,
        category: `CreditLock`,
        method: `RemoveLock`,
        action: `error`,
    },
    '10000357': {
        code: `10000357`,
        name: `CreditLock_00357`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Lock`,
        action: `error`,
    },
    '10000358': {
        code: `10000358`,
        name: `CreditLock_00358`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000359': {
        code: `10000359`,
        name: `CreditLock_00359`,
        message: `Credit Lock Not Available for Credit Report`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000368': {
        code: `10000368`,
        name: `CreditLock_00368`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000369': {
        code: `10000369`,
        name: `CreditLock_00369`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000371': {
        code: `10000371`,
        name: `CreditLock_00371`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000373': {
        code: `10000373`,
        name: `CreditLock_00373`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000400': {
        code: `10000400`,
        name: `CreditLock_00400`,
        message: `CPA FFR error has occurred`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000410': {
        code: `10000410`,
        name: `CreditLock_00410`,
        message: `CPA returned a null FFR`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000420': {
        code: `10000420`,
        name: `CreditLock_00420`,
        message: `CPA returned an empty FFR`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000430': {
        code: `10000430`,
        name: `CreditLock_00430`,
        message: `CPA returned a TU4E FFR`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000440': {
        code: `10000440`,
        name: `CreditLock_00440`,
        message: `System error, please try again`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000450': {
        code: `10000450`,
        name: `CreditLock_00450`,
        message: `CPA returned an invalid FFR`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000513': {
        code: `10000513`,
        name: `CreditLock_00513`,
        message: `First Name is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000515': {
        code: `10000515`,
        name: `CreditLock_00515`,
        message: `Last Name is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000517': {
        code: `10000517`,
        name: `CreditLock_00517`,
        message: `Street Address is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000518': {
        code: `10000518`,
        name: `CreditLock_00518`,
        message: `City is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000519': {
        code: `10000519`,
        name: `CreditLock_00519`,
        message: `State Code is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000520': {
        code: `10000520`,
        name: `CreditLock_00520`,
        message: `Zip Code is missing.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '10000522': {
        code: `10000522`,
        name: `CreditLock_00522`,
        message: `SSN is invalid. Please provide the correct value.`,
        category: `CreditLock`,
        method: `Multiple`,
        action: `error`,
    },
    '20000219': {
        code: `20000219`,
        name: `FA_00219`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000221': {
        code: `20000221`,
        name: `FA_00221`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000310': {
        code: `20000310`,
        name: `FA_00310`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000323': {
        code: `20000323`,
        name: `FA_00323`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000325': {
        code: `20000325`,
        name: `FA_00325`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000458': {
        code: `20000458`,
        name: `FA_00458`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000459': {
        code: `20000459`,
        name: `FA_00459`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000515': {
        code: `20000515`,
        name: `FA_00515`,
        message: `Last Name is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000519': {
        code: `20000519`,
        name: `FA_00519`,
        message: `Current address state code invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000520': {
        code: `20000520`,
        name: `FA_00520`,
        message: `Current address ZIP code invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000522': {
        code: `20000522`,
        name: `FA_00522`,
        message: `SSN# is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000525': {
        code: `20000525`,
        name: `FA_00525`,
        message: `Current address Street Name is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000600': {
        code: `20000600`,
        name: `FA_00600`,
        message: `Alert Type is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000605': {
        code: `20000605`,
        name: `FA_00605`,
        message: `Phone Number 1 is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000606': {
        code: `20000606`,
        name: `FA_00606`,
        message: `Phone Number 2 is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000607': {
        code: `20000607`,
        name: `FA_00607`,
        message: `Phone Extension 1 is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000608': {
        code: `20000608`,
        name: `FA_00608`,
        message: `Phone Extension 2 is invalid`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000609': {
        code: `20000609`,
        name: `FA_00609`,
        message: `Invalid Extend Alert`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000611': {
        code: `20000611`,
        name: `FA_00611`,
        message: `Error parsing date`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000613': {
        code: `20000613`,
        name: `FA_00613`,
        message: `Unknown application exception`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000614': {
        code: `20000614`,
        name: `FA_00614`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000615': {
        code: `20000615`,
        name: `FA_00615`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000616': {
        code: `20000616`,
        name: `FA_00616`,
        message: `The UserID is in use by the operator or the system. Please try again later`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000617': {
        code: `20000617`,
        name: `FA_00617`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
    '20000618': {
        code: `20000618`,
        name: `FA_00618`,
        message: `Fraud Alert not Available for Credit Report. Please contact TransUnion's Consumer Relations.`,
        category: `Fraud Alerts`,
        method: `Multiple`,
        action: `error`,
    },
};
